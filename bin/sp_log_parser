#!/usr/bin/env ruby

require "bundler/setup"
require "smart_pension_test"
require "thor"

class SmartPensionTestCLI < Thor

  desc 'parse LOG FILE', 'Parse the log file'
  option :most_views, type: :boolean, description: 'Prints out most page views in desc order'
  option :most_unique_views, type: :boolean, description: 'Prints out most unique page views in desc order'

  def parse(log_file)
    raise "File: '#{log_file}' Does not exists" unless File.exist?(log_file)

    log_parser = SmartPensionTest::LogParser.new(log_file)
    log_analyzer = SmartPensionTest::LogAnalyzer.new(log_parser.data)

    if options[:most_views]
      log_analyzer.most_page_views.each do |log_item|
        puts "#{log_item[:path]} #{log_item[:visit_count]} views"
      end
    end

    if options[:most_unique_views]
      log_analyzer.most_unique_page_views.each do |log_item|
        puts "#{log_item[:path]} #{log_item[:visit_count]} views"
      end
    end
  end

end

SmartPensionTestCLI.start(ARGV)